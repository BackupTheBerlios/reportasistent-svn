<!-- AR2NL DTD 1.2 -->

<!-- This is DTD for data of the AR2NL system. 
     Please use the following formal public identifier to identify it:
     
     "-//LISp-Miner//DTD AR2NL 1.2//EN"
     
     If your document's top-level element is Formulation pattern,
     use this DOCTYPE declaration:
     
     <!DOCTYPE formulationpatterns PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
     	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">
	
     If your document's top-level element is Auxiliary symbol,
     use this DOCTYPE declaration:
     
     <!DOCTYPE auxiliarysymbols PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">
	
     If your document's top-level element is pattern for nouns,
     use this DOCTYPE declaration:
     
     <!DOCTYPE mnpatterns PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">
     
     If your document's top-level element is pattern for verbs,
     use this DOCTYPE declaration:
     
     <!DOCTYPE mvpatterns PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">
     
     If your document's top-level element is Entity,
     use this DOCTYPE declaration:
     
     <!DOCTYPE entitynames PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">
     
     If your document's top-level element is Elementary expression,
     use this DOCTYPE declaration:
     
     <!DOCTYPE elementaryexpressions PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
     	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">
	
     If your document's top-level element is file with language parameters,
     use this DOCTYPE declaration:
     
     <!DOCTYPE langparameters PUBLIC "-//LISp-Miner//DTD AR2NL 1.2//EN"
     	"http://lispminer.vse.cz/dtd/ar2nl-1.2.dtd">

-->


<!-- entities -->

<!ENTITY % directive
           "case   (1|2|3|4|5|6|7|_|nom|gen|par|ess|tra|ine|ela|ill|ade|abl|all|abe|kom|ins) #IMPLIED
	    number (sg|pl|qpl|_)     #IMPLIED">

<!ENTITY % entity.symbol "symbol (E|Edefart|Edemonstr|Eid1|Eid2|Eindefart|Epers|Eptc0|Eptc1|Erel|EPtcPatternSuffix) #REQUIRED">

<!ENTITY % fpa.symbol "symbol (A|C|X|Y|Z) #REQUIRED">

<!ENTITY % role.symbol "role (A|S|C) #REQUIRED">

<!ENTITY % numofant "numofant CDATA #REQUIRED">
<!ENTITY % numofsuc "numofsuc CDATA #REQUIRED">
<!ENTITY % numofcon "numofcon CDATA #REQUIRED">

<!-- common elements -->

<!ELEMENT literal EMPTY>
<!ATTLIST literal %role.symbol;
		  typeofphrase (L|N|R|V|NA) #REQUIRED
                  %directive;
		  vderivation  (ptc)     #IMPLIED>

<!ELEMENT word (#PCDATA)>
<!ATTLIST word pattern CDATA #REQUIRED
               class (nominal|verb) #REQUIRED>

<!ELEMENT optionaltext (#PCDATA|choosetext)*>

<!ELEMENT choosetext (variant+)>

<!ELEMENT variant (#PCDATA)>

<!ELEMENT param EMPTY>
<!ATTLIST param name (B|P|T|N) #REQUIRED>

<!ELEMENT ename EMPTY>
<!ATTLIST ename %entity.symbol;
                %directive;>

<!ELEMENT floatslot EMPTY>
<!ATTLIST floatslot id CDATA #REQUIRED
                    %role.symbol;
		    occno (first|last) #REQUIRED>

<!-- formulation patterns -->

<!ELEMENT formulationpatterns (fp*)>

<!ELEMENT fp (#PCDATA|choosetext|ename|floatslot|fpa|literal|optionaltext|param)*>
<!ATTLIST fp id         ID      #REQUIRED
             quantifier (AAI|FUI|DFUI)   #REQUIRED
	     %numofant;
	     %numofsuc;
	     %numofcon;>

<!ELEMENT fpa EMPTY>
<!ATTLIST fpa %fpa.symbol;
              %directive;>

<!-- entities -->

<!ELEMENT entitynames (enamedata*)>

<!ELEMENT enamedata (#PCDATA|word)*>
<!ATTLIST enamedata id ID #REQUIRED
                    %entity.symbol;>

<!-- fpa - Formulation Patterns - Auxiliary -->

<!ELEMENT auxiliarysymbols (fpadata*)>

<!ELEMENT fpadata (#PCDATA|choosetext|ename|floatslot|fpa|literal|optionaltext|param)*>
<!ATTLIST fpadata id ID #REQUIRED
                  %fpa.symbol;
		  %numofant;
		  %numofsuc;
	          %numofcon;>

<!-- elementary expressions -->

<!ELEMENT elementaryexpressions (expression*)>

<!ELEMENT expression (mbattribute, meaning, (APinv|NPinv|VPinv)*, categories)>
<!ATTLIST expression id ID #REQUIRED>

<!ELEMENT mbattribute (#PCDATA)>

<!ELEMENT meaning (#PCDATA)>

<!ELEMENT VPinv (#PCDATA|float|param|word)*>
<!ELEMENT APinv (#PCDATA|float|param|word)*>
<!ELEMENT NPinv (#PCDATA|float|param|word)*>

<!ELEMENT categories (category+)>

<!ELEMENT category (value, meaning, adjphrase*, nounphrase*, NAF*, verbphrase*)>

<!ELEMENT value (#PCDATA)>

<!ELEMENT adjphrase (#PCDATA|APinv|float|param|word)*>
<!ATTLIST adjphrase relposition (R|L) #REQUIRED>

<!ELEMENT nounphrase (#PCDATA|float|NPinv|param|word)*>
<!ATTLIST nounphrase %directive;>

<!ELEMENT NAF (#PCDATA|nounphrase)*>

<!ELEMENT verbphrase (#PCDATA|float|param|ptcmod|ptcmodslot|VPinv|word)*>

<!ELEMENT float (#PCDATA)>
<!ATTLIST float id CDATA #REQUIRED>

<!ELEMENT ptcmod (#PCDATA|param|VPinv|word)*>
<!ATTLIST ptcmod id CDATA #REQUIRED>

<!ELEMENT ptcmodslot EMPTY>
<!ATTLIST ptcmodslot id CDATA #REQUIRED>

<!-- common elements for patterns in MN and MV -->

<!ELEMENT pattern (example, (endsegment*|(base, pl, qpl?, ptc, ptcpattern?)))>
<!ATTLIST pattern name   CDATA #REQUIRED>

<!ELEMENT endsegment (#PCDATA)>
<!ATTLIST endsegment case   (1|2|3|4|5|6|7|nom|gen|par|ess|tra|ine|ela|ill|ade|abl|all|abe|kom|ins) #IMPLIED
		     number (sg|pl) #REQUIRED>
<!ELEMENT base (#PCDATA)>
<!ELEMENT pl (#PCDATA)>
<!ELEMENT qpl (#PCDATA)>
<!ELEMENT ptc (#PCDATA)>
<!ATTLIST ptc recommended (yes|no) "yes">
<!ELEMENT ptcpattern (#PCDATA)>
<!ELEMENT example (#PCDATA)>

<!-- MN patterns -->

<!ELEMENT mnpatterns (pattern*)>

<!-- MV patterns -->

<!ELEMENT mvpatterns (pattern*)>

<!-- Language parameter -->

<!ELEMENT langparameters (langparam*)>

<!ELEMENT langparam EMPTY>
<!ATTLIST langparam name (conjunction|participle.position|decimal.point.symbol) #REQUIRED
	            value CDATA #REQUIRED>
